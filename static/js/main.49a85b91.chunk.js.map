{"version":3,"sources":["main/ui/c3-SuperCheckbox/SuperCheckbox.module.css","main/bll/reducers/auth-reducer.ts","main/bll/reducers/error-reducer.ts","main/bll/reducers/login-reducer.tsx","main/bll/reducers/new-password-reducer.tsx","main/bll/reducers/password-recovery-reducer.ts","main/bll/reducers/profile-reducer.ts","main/bll/reducers/register-reducer.ts","main/bll/store.ts","features/auth/error/Error404.tsx","features/auth/login/Login.tsx","features/auth/profile/Profile.tsx","features/auth/password-recovery/Password-recovery.tsx","features/auth/new-password/New-password.tsx","features/auth/register/Register.tsx","features/auth/authPage/Auth.tsx","main/ui/c1-SuperInputText/SuperInputText.tsx","main/ui/c2-SuperButton/SuperButton.tsx","main/ui/c3-SuperCheckbox/SuperCheckbox.tsx","features/test/Test.tsx","main/ui/routes/Routes.tsx","main/ui/Header.tsx","main/ui/Main.tsx","main/ui/App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","initialState","isAuth","error","newPassword","recoveryPassword","rootReducer","combineReducers","auth","state","login","recover","profile","register","store","createStore","Error404","Login","Profile","PasswordRecovery","NewPassword","Register","Auth","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","className","spanClassName","restProps","finalSpanClassName","s","finalInputClassName","errorInput","superInput","e","currentTarget","value","key","SuperButton","red","finalClassName","button","default","SuperCheckbox","onChangeChecked","children","checkbox","checked","Test","PATH","RoutesPage","path","element","to","Header","Main","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.49a85b91.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__3FOF8\",\"spanClassName\":\"SuperCheckbox_spanClassName__3lHje\"};","const initialState = {\n    isAuth: false\n}\n\n\nexport const AuthReducer = (state = initialState, action: any): any => {\n\n        return state\n\n}","const initialState = {\n    error: false\n}\n\n\nexport const ErrorReducer = (state = initialState, action: any): any => {\n\n    return state\n\n}","const initialState = {\n\n}\n\n\nexport const LoginReducer = (state = initialState, action: any): any => {\n\n    return state\n\n}","import {LoginReducer} from \"./login-reducer\";\n\nconst initialState = {\n    newPassword: null\n}\n\n\nexport const NewPasswordReducer = (state = initialState, action: any): any => {\n\n    return state\n\n}","const initialState = {\n    recoveryPassword: null\n}\n\n\nexport const PasswordRecoveryReducer = (state = initialState, action: any): any => {\n\n    return state\n\n}","const initialState = {\n    newPassword: null\n}\n\n\nexport const ProfileReducer = (state = initialState, action: any): any => {\n\n    return state\n\n}","const initialState = {\n    newPassword: null\n}\n\n\nexport const RegisterReducer = (state = initialState, action: any): any => {\n\n    return state\n\n}","import {combineReducers, createStore} from \"redux\";\nimport {AuthReducer} from \"./reducers/auth-reducer\";\nimport {ErrorReducer} from \"./reducers/error-reducer\";\nimport {LoginReducer} from \"./reducers/login-reducer\";\nimport {NewPasswordReducer} from \"./reducers/new-password-reducer\";\nimport {PasswordRecoveryReducer} from \"./reducers/password-recovery-reducer\";\nimport { ProfileReducer } from \"./reducers/profile-reducer\";\nimport { RegisterReducer } from \"./reducers/register-reducer\";\n\n\nconst rootReducer = combineReducers({\n    auth: AuthReducer,\n    error: ErrorReducer,\n    login: LoginReducer,\n    newPassword: NewPasswordReducer,\n    recover: PasswordRecoveryReducer,\n    profile: ProfileReducer,\n    register: RegisterReducer\n})\n\n\nexport const store = createStore(rootReducer)","import React from \"react\"\r\n\r\nfunction Error404() {\r\n    return (\r\n        <div>\r\n           <h1>404 NOT FOUND</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Error404\r\n","import React from \"react\"\n\nexport const Login = () => {\n    return (\n        <div>\n            <h1>LOGIN</h1>\n        </div>\n    )\n}\n\n","import React from \"react\"\n\nexport const Profile = () => {\n    return (\n        <div>\n            <h1>PROFILE</h1>\n        </div>\n    )\n}\n\n\n","import React from \"react\"\n\nexport const PasswordRecovery = () => {\n    return (\n        <div>\n            <h1>PASSWORD RECOVERY</h1>\n        </div>\n    )\n}","import React from \"react\"\n\nexport const NewPassword = () => {\n    return (\n        <div>\n            <h1>NEW PASSWORD</h1>\n        </div>\n    )\n}\n","import React from \"react\"\n\nexport const Register = () => {\n    return (\n        <div>\n            <h1>REGISTER</h1>\n        </div>\n    )\n}","import React from 'react'\n\n\n\n\nexport const Auth = () => {\n    return (\n        <h1>AUTH</h1>\n    )\n}","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${s.error} ${error ? s.errorInput : s.superInput} ${className}` // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={'text'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <div className={finalSpanClassName}>{error}</div>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${s.button} ${red ? s.red : s.default} ${className}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\nimport {on} from 'cluster';\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        // сделайте так чтоб работал onChange и onChangeChecked\r\n        onChange && onChange(e)\r\n\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React from 'react'\nimport SuperInputText from \"../../main/ui/c1-SuperInputText/SuperInputText\";\nimport SuperButton from \"../../main/ui/c2-SuperButton/SuperButton\";\nimport SuperCheckbox from \"../../main/ui/c3-SuperCheckbox/SuperCheckbox\";\n\n\n\nexport const Test = () => {\n    return (\n        <div>\n            <SuperInputText/>\n            <SuperButton>Button</SuperButton>\n            <SuperCheckbox/>\n        </div>\n    )\n}","import React from \"react\"\nimport {Navigate, Route, Routes} from \"react-router-dom\";\nimport Error404 from \"../../../features/auth/error/Error404\";\nimport {Login} from \"../../../features/auth/login/Login\";\nimport {Profile} from \"../../../features/auth/profile/Profile\";\nimport {PasswordRecovery} from \"../../../features/auth/password-recovery/Password-recovery\";\nimport {NewPassword} from \"../../../features/auth/new-password/New-password\";\nimport {Register} from \"../../../features/auth/register/Register\";\nimport {Auth} from \"../../../features/auth/authPage/Auth\";\nimport {Test} from \"../../../features/test/Test\";\n\n\nexport const PATH = {\n    LOGIN: \"/login\",\n    AUTH: \"/auth\",\n    REGISTER: \"/register\",\n    \"404\": \"/error\",\n    PROFILE: \"/profile\",\n    PASSWORD: \"/password\",\n    NEW_PASSWORD: \"/new_password\",\n    TEST:\"/test\"\n}\n\n\nexport const RoutesPage = () => {\n    return (\n        <div>\n            <Routes>\n\n                <Route path={\"/\"} element={<Navigate to={PATH.LOGIN}/>}/>\n                <Route path={PATH.LOGIN} element={<Login/>}/>\n                <Route path={PATH.REGISTER} element={<Register/>}/>\n                <Route path={PATH.AUTH} element={<Auth/>}/>\n                <Route path={PATH.PROFILE} element={<Profile/>}/>\n                <Route path={PATH.PASSWORD} element={<PasswordRecovery/>}/>\n                <Route path={PATH.NEW_PASSWORD} element={<NewPassword/>}/>\n                <Route path={PATH[\"404\"]} element={<Error404/>}/>\n                <Route path={PATH.TEST} element={<Test/>}/>\n\n            </Routes>\n        </div>\n    )\n}","import React from \"react\"\nimport {NavLink} from \"react-router-dom\"\nimport {PATH} from \"./routes/Routes\";\n\n\nexport const Header = () => {\n    return (\n        <div>\n            <span>  <NavLink to={PATH.LOGIN}> Login / </NavLink>  </span>\n            <span>  <NavLink to={PATH.AUTH}> Auth / </NavLink>  </span>\n            <span>  <NavLink to={PATH.REGISTER}> Register / </NavLink>  </span>\n            <span>  <NavLink to={PATH.PROFILE}> Profile / </NavLink>  </span>\n            <span>  <NavLink to={PATH.PASSWORD}> Password recovery / </NavLink>  </span>\n            <span>  <NavLink to={PATH.NEW_PASSWORD}> Enter new password / </NavLink>  </span>\n            <span>  <NavLink to={PATH[\"404\"]}> 404 page not found / </NavLink>  </span>\n            <span>  <NavLink to={PATH.TEST}> Test  / </NavLink>  </span>\n        </div>\n    )\n}","import React from \"react\"\nimport {Header} from \"./Header\"\nimport {RoutesPage} from \"./routes/Routes\";\n\n\nexport const Main = () => {\n    return (\n        <div>\n\n            <Header/>\n            <RoutesPage/>\n\n        </div>\n    )\n}","import React from \"react\";\nimport \"./App.css\";\nimport {HashRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport {store} from \"../bll/store\";\nimport {Main} from \"./Main\";\n\nexport const App = () => {\n    return (\n        <div className=\"App\">\n            <HashRouter>\n                <Provider store={store}>\n                    <Main/>\n                </Provider>\n            </HashRouter>\n        </div>\n    );\n}\n\n\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport {App} from \"./main/ui/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}